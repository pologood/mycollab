package com.mycollab.module.project.domain;

import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("ucd")
public class TicketKeyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public TicketKeyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    @SuppressWarnings("ucd")
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNull() {
            addCriterion("projectId is null");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNotNull() {
            addCriterion("projectId is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidEqualTo(Integer value) {
            addCriterion("projectId =", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotEqualTo(Integer value) {
            addCriterion("projectId <>", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThan(Integer value) {
            addCriterion("projectId >", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThanOrEqualTo(Integer value) {
            addCriterion("projectId >=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThan(Integer value) {
            addCriterion("projectId <", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThanOrEqualTo(Integer value) {
            addCriterion("projectId <=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidIn(List<Integer> values) {
            addCriterion("projectId in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotIn(List<Integer> values) {
            addCriterion("projectId not in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidBetween(Integer value1, Integer value2) {
            addCriterion("projectId between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotBetween(Integer value1, Integer value2) {
            addCriterion("projectId not between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andTicketidIsNull() {
            addCriterion("ticketId is null");
            return (Criteria) this;
        }

        public Criteria andTicketidIsNotNull() {
            addCriterion("ticketId is not null");
            return (Criteria) this;
        }

        public Criteria andTicketidEqualTo(Integer value) {
            addCriterion("ticketId =", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotEqualTo(Integer value) {
            addCriterion("ticketId <>", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidGreaterThan(Integer value) {
            addCriterion("ticketId >", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ticketId >=", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidLessThan(Integer value) {
            addCriterion("ticketId <", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidLessThanOrEqualTo(Integer value) {
            addCriterion("ticketId <=", value, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidIn(List<Integer> values) {
            addCriterion("ticketId in", values, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotIn(List<Integer> values) {
            addCriterion("ticketId not in", values, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidBetween(Integer value1, Integer value2) {
            addCriterion("ticketId between", value1, value2, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTicketidNotBetween(Integer value1, Integer value2) {
            addCriterion("ticketId not between", value1, value2, "ticketid");
            return (Criteria) this;
        }

        public Criteria andTickettypeIsNull() {
            addCriterion("ticketType is null");
            return (Criteria) this;
        }

        public Criteria andTickettypeIsNotNull() {
            addCriterion("ticketType is not null");
            return (Criteria) this;
        }

        public Criteria andTickettypeEqualTo(String value) {
            addCriterion("ticketType =", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeNotEqualTo(String value) {
            addCriterion("ticketType <>", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeGreaterThan(String value) {
            addCriterion("ticketType >", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeGreaterThanOrEqualTo(String value) {
            addCriterion("ticketType >=", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeLessThan(String value) {
            addCriterion("ticketType <", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeLessThanOrEqualTo(String value) {
            addCriterion("ticketType <=", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeLike(String value) {
            addCriterion("ticketType like", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeNotLike(String value) {
            addCriterion("ticketType not like", value, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeIn(List<String> values) {
            addCriterion("ticketType in", values, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeNotIn(List<String> values) {
            addCriterion("ticketType not in", values, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeBetween(String value1, String value2) {
            addCriterion("ticketType between", value1, value2, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTickettypeNotBetween(String value1, String value2) {
            addCriterion("ticketType not between", value1, value2, "tickettype");
            return (Criteria) this;
        }

        public Criteria andTicketkeyIsNull() {
            addCriterion("ticketKey is null");
            return (Criteria) this;
        }

        public Criteria andTicketkeyIsNotNull() {
            addCriterion("ticketKey is not null");
            return (Criteria) this;
        }

        public Criteria andTicketkeyEqualTo(Integer value) {
            addCriterion("ticketKey =", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyNotEqualTo(Integer value) {
            addCriterion("ticketKey <>", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyGreaterThan(Integer value) {
            addCriterion("ticketKey >", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyGreaterThanOrEqualTo(Integer value) {
            addCriterion("ticketKey >=", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyLessThan(Integer value) {
            addCriterion("ticketKey <", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyLessThanOrEqualTo(Integer value) {
            addCriterion("ticketKey <=", value, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyIn(List<Integer> values) {
            addCriterion("ticketKey in", values, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyNotIn(List<Integer> values) {
            addCriterion("ticketKey not in", values, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyBetween(Integer value1, Integer value2) {
            addCriterion("ticketKey between", value1, value2, "ticketkey");
            return (Criteria) this;
        }

        public Criteria andTicketkeyNotBetween(Integer value1, Integer value2) {
            addCriterion("ticketKey not between", value1, value2, "ticketkey");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated do_not_delete_during_merge Sat Apr 20 17:20:23 CDT 2019
     */
    @SuppressWarnings("ucd")
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table m_prj_ticket_key
     *
     * @mbg.generated Sat Apr 20 17:20:23 CDT 2019
     */
    @SuppressWarnings("ucd")
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}